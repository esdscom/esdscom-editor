using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Xml;
using System.Xml.Linq;
using System.Xml.Schema;
using System.Xml.Serialization;
using System.Xml.XPath;

namespace FixXml;

internal class FixerClass
{
    //  this is necessary because the starter xml file was generated by xmlspy and the process
    //  that did that did not create the right node structure for deeply nested phrase type nodes


    public FixerClass()
    {

    }

    XmlDocument xmlDoc = new XmlDocument();

    internal void StartFix()
    {
        xmlDoc.Load(@"C:\temp\SDSComXML\5.0.0-starter.xml");

        XmlNode node = xmlDoc.DocumentElement;

        FixNodes(node, xmlDoc);

        xmlDoc.Save(@"C:\temp\SDSComXML\5.0.0-starter-fixed.xml");
    }

    internal void FixNodes(XmlNode node, XmlDocument xDoc)
    {

        if (node.Attributes.GetNamedItem("PhraseCatalogueId") is not null)
        {
            if (!node.HasChildNodes)
            {                
                node.InnerXml = @"<PhraseCode/>
								<FullText/>
								<MergePhrase PhraseId="" PhraseCatalogueId="" MergePhraseNo="" ListItemNo="">
									<MergeText/>
									<Delimiter/>
								</MergePhrase>";
            }
            else
            {
                foreach (XmlNode child in node.ChildNodes)
                {
                    FixNodes(child, xDoc);
                }
            }
        }
        else
        {
            foreach (XmlNode child in node.ChildNodes)
            {
                FixNodes(child, xDoc);
            }
        }
    }
}
