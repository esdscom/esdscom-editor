<div class="row">
    <div class="col">
        <div class="form-group">
            <button type="button" class="btn btn-link" @onclick="ToggleHelp">@Utils.SplitCamelCase(displayname)</button>
            <br />
            <InputSelect class="form-control" @bind-Value="@Node.InnerText" @onchange="ChangeValue" DisplayName="@displayname" style="width:25%">
                @foreach (var value in enumValueArray)
                {
                    <option value="@value">@value</option>
                }
            </InputSelect>
        </div>

        <div hidden="@bHideHelp">
            <DataPointCommentsComponent HelpItems="@HelpItems" />
        </div>

    </div>
</div>


@code
{
    [CascadingParameter] public AppState AppState { get; set; }

    [Parameter] public XmlNode Node { get; set; }
    [Parameter] public BaseEntity Entity { get; set; }

    public Dictionary<string, object> HelpItems { get; set; } = new();

    string displayname;
    bool bHideHelp;
    ElementEnum elementEnum = new();
    string[] enumValueArray;


    protected override void OnInitialized()
    {
        base.OnInitialized();

        string noOptions = "No options available";

        bHideHelp = true;

        elementEnum = AppState.EnumItems.Where(e => e.Name == Entity.Type).FirstOrDefault();

        if (elementEnum is not null)
        {
            enumValueArray = elementEnum.Values.Split(",");
        }
        else
        {
            enumValueArray = new string[] { noOptions };
        }

        if (Entity is not null)
        {
            displayname = Entity.DisplayName;
            HelpItems.Add("Comments", $"{Entity.Comments} {Entity.TypeComments} Possible Values: {(elementEnum == null ? noOptions : elementEnum.Values)}");
            HelpItems.Add("Occurs", Utils.GetOccursText(Entity.Occurs));
        }
        else
        {
            displayname = "Entity not found!!!";
        }       
    }

    void ChangeValue(ChangeEventArgs e)
    {
        Node.InnerText = e.Value.ToString();
    }

    public void ToggleHelp()
    {
        bHideHelp = !bHideHelp;
    }
}
