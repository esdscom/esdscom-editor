@page "/"

@inject HttpClient api
@inject NavigationManager nav

<div class="container-fluid">

    @if (IsLoading)
    {
        <Spinner/>
    }
    else
    {
        <CardSet CardItemList="itemList" />

        <button type="button" class="btn btn-link" @onclick="GoAbout">About</button>
    }

</div>

@code
{
    [CascadingParameter] public AppState AppState { get; set; }

    bool IsLoading = true;
    List<CardItem> itemList = new();
    AppDataService dMgr;

    protected override async Task OnInitializedAsync()
    {
        @*        #if DEBUG
        Thread.Sleep(10000);

         vh-100 vw-100

        #endif*@

        await base.OnInitializedAsync();

        dMgr = new(api);

        //this includes the XML for the datasheetFeed, Info Exp sys and a list of datasheet
        if (AppState.DocumentSetXml is null)
        {
            AppState.DocumentSetXml = Utils.GetDocumentSetXml();
        }

        AppState.ESDSphracCatalogueName = "eSDScomphrac";
        AppState.ESDSphracPhraseCatalogueId = "1";
        AppState.ESDSPhraCVersion = "5.0";
        AppState.ESDSXmlVersion = "5.4.1";

        Guid userGuid = Guid.Parse("35984ABA-E95C-4591-82FF-0E38A2D1FECD");
        Guid orgGuid = Guid.Parse("60D03E92-ED1E-47A6-83BF-8D56ED3561AF");

        //var newUser = new User()
        //    {
        //        Id = userGuid,
        //        Email = "tester@test.com",
        //        Name = "a test user",
        //        Role = 1,
        //        OrganizationId = orgGuid,
        //        IsActive = true
        //    };

        //await dMgr.AddUserAsync(newUser);

        AppState.User = await dMgr.GetUserAsync(userGuid);

        //-------------------------------------------------------------------------------------------
        // create a new organization

        //XmlDocument xDocIES = Utils.ReadInfoExpSysResource();

        //AppState.Organization = new()
        //    {
        //        Id = orgGuid,
        //        Name = "Test Organization",
        //        Address = "123 Smith Street, Omaha, Ne. 22222",
        //        OrganizationType = "Commercial",
        //        InfoExSys = xDocIES.OuterXml
        //    };

        //AppState.Organization = await dMgr.AddOrganizationAsync(AppState.Organization);

        //-----------------------------------------------------------------------------------------------

        if (AppState.Organization is null)
        {
            AppState.Organization = await dMgr.GetOrganizationAsync(orgGuid);
            AppState.Organization.InfoExSysXDoc = new();
            AppState.Organization.InfoExSysXDoc.LoadXml(AppState.Organization.InfoExSys);
        }

        //if (AppState.ActiveDatasheet is null)
        //{
        //    Guid testDocId = Guid.Parse("492305f6-fd4c-4844-8d24-ebe377bec26b");
        //    AppState.ActiveDatasheet = await dMgr.GetDatasheetAsync(orgGuid, testDocId);
        //}

        //AppState.Organization = await api.GetFromJsonAsync<Organization>($"organization/get?id={"60D03E92-ED1E-47A6-83BF-8D56ED3561AF".ToLower()}");
        //XmlDocument xDoc = new();
        //xDoc.LoadXml(AppState.Organization.XmlData);
        //AppState.Organization.InformationFromExportingSystem = xDoc.DocumentElement;

        BuildCardItems();

        if (AppState.SchemaElements is null)
        {
            AppState.SchemaElements = Utils.GetSchemaElements();
        }

        if (AppState.EnumItems is null)
        {
            AppState.EnumItems = Utils.GetSchemaEnums();
        }

        if (AppState.Regions is null)
        {
            AppState.Regions = Utils.GetRegions();
        }

        if (AppState.Phrases is null)
        {
            AppState.Phrases = Utils.GetPhrases();
        }

        IsLoading = false;

        AppState.StatusBarMessage = "editing tool is ready for use.";
    }

    private List<CardItem> BuildCardItems()
    {

        CardItem docSets = new()
            {
                Title = "Document Set List",
                Comment = "List of Document sets managed by my organization",
                ActionLink = "/Documents/ListDocumentSets",
                ImageURL = "images/docset.png"
            };
        itemList.Add(docSets);

        CardItem docSetAdd = new()
            {
                Title = "Create a new Document Set",
                Comment = "Create a new Document set for authoring",
                ActionLink = "/Documents/EditDocumentSet/true",
                ImageURL = "images/docset.png"
            };
        itemList.Add(docSetAdd!);

        CardItem docList = new()
            {
                Title = "Datasheet List",
                Comment = "List of Datasheets managed by my organization",
                ActionLink = "/Documents/ListDocuments",
                ImageURL = "images/doc.png"
            };
        itemList.Add(docList);

        CardItem substances = new()
            {
                Title = "Substances",
                Comment = "Search the list of provided Substances",
                ActionLink = "/Substances/ListSubstances",
                ImageURL = "images/substance.png"
            };
        itemList.Add(substances);

        CardItem phrasebrowser = new()
            {
                Title = "Phrase Browser",
                Comment = "Search the list of eSDSphrac phrases",
                ActionLink = "/Phrases/PhraseBrowser",
                ImageURL = "images/doc.png"
            };
        itemList.Add(phrasebrowser);

        CardItem orginfo = new()
            {
                Title = "My Organization",
                Comment = "Manage my organization",
                ActionLink = "/MyOrganization",
                ImageURL = "images/organization.png"
            };
        itemList.Add(orginfo);

        CardItem import = new()
            {
                Title = "Import",
                Comment = "Import one or more Document sets from another system",
                ActionLink = "/Documents/ImportDocuments",
                ImageURL = "images/organization.png"
            };
        itemList.Add(import);

        CardItem export = new()
            {
                Title = "Export",
                Comment = "Export one or more Document sets from another system",
                ActionLink = "/Documents/ExportDocuments",
                ImageURL = "images/organization.png"
            };
        itemList.Add(export);

        return itemList;
    }

    private void GoTest1()
    {
        nav.NavigateTo("/Test");
    }

    private void GoTest2()
    {
        nav.NavigateTo("/TestPage2");
    }

    private void GoAbout()
    {
        nav.NavigateTo("/AppInfo");
    }

        }
