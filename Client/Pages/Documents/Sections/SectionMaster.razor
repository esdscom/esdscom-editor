@page "/Documents/Sections/SectionMaster/{*NodeName}"

@inject NavigationManager nav
@inject HttpClient api

<EditForm EditContext="CurrentEditContext" OnValidSubmit="SaveAsync">

    <div class="container-fluid">
         <div class="row border border-primary mb-3">
            <div class="col align-self-start">
                <span>Datasheet: @AppState.ActiveDatasheet.Name</span>
            </div>
             <div class="col align-self-end">
                <span>Section: @Utils.SplitCamelCase(AppState.ActiveSectionName)</span>
            </div>
        </div>
        <div class="row d-flex mb-3">
            <div class="col align-self-start">
                <button type="submit" class="btn btn-success">Save All Changes</button>
            </div>
             <div class="col align-self-end">
                <button type="button" class="btn btn-secondary" @onclick="GoSectionHome">Back to Sections</button>
            </div>
        </div>

         <ComplexTypeComponent Node="@activeNode" Entity="@entity" />  

    </div>

</EditForm>

@code
{
    [CascadingParameter] public AppState AppState { get; set; }

    [Parameter] public string NodeName { get; set; }
    [Parameter] public string EntityType { get; set; }

    public EditContext CurrentEditContext { get; set; }

    private XmlNode activeNode;
    private BaseEntity entity;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (NodeName.Contains(@"/"))  //this hack is needed because blazor router(?) strips // from front of xpath for some reason
        {
            NodeName = NodeName.Replace(@"DatasheetFeed", @"/");
        }

        activeNode = AppState.ActiveDatasheet.DatasheetXDoc.DocumentElement.SelectSingleNode(NodeName);

        entity = AppState.SchemaElements.Where(s => s.NodeName == activeNode.Name).FirstOrDefault();

        CurrentEditContext = new EditContext(activeNode);

    }

    async Task SaveAsync()
    {
        AppDataService dMgr = new(api);

        AppState.ActiveDatasheet = await dMgr.UpdateDatasheetAsync(AppState.ActiveDatasheet);

        AppState.StatusBarMessage = "Datasheet saved";
    }

    void GoSectionHome()
    {
        nav.NavigateTo("/Documents/Sections/SectionHome");
    }
}
