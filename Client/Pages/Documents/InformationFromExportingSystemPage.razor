@page "/Documents/InformationFromExportingSystemPage"

@inject NavigationManager nav
@inject HttpClient api

<PageHeader Title = "@title"/>

<EditForm EditContext = "CurrentEditContext" OnValidSubmit="SaveAsync"> 
     <DataAnnotationsValidator />
     <ValidationSummary />

    @foreach (XmlNode node in nodes)
    {
        BaseEntity entity = AppState.SchemaElements.Where(s => s.NodeName == node.Name).FirstOrDefault();

        <ComplexTypeComponent Node="@node" Entity="@entity"/>         
    }

    <button type="submit" class="btn btn-secondary">Save</button>

</EditForm>

@code
{
    [CascadingParameter] public AppState AppState { get; set; }

    public EditContext CurrentEditContext { get; set; }

    private XmlDocument orgInfoExpSys;
    private XmlNodeList nodes;
    private string title;
    private Organization org;

    protected override void OnInitialized()
    {     
        base.OnInitialized();

        org = AppState.Organization;

        title = $"Information From Exporting System for {org.Name}";
        AppState.StatusBarMessage = "Ready";

        orgInfoExpSys = org.InfoExSysXDoc;

        if (orgInfoExpSys is null)
        {
            orgInfoExpSys = Utils.GetInfoExpSysXml();
        }       

        if (orgInfoExpSys.HasChildNodes)
        {
            nodes = orgInfoExpSys.DocumentElement.ChildNodes;
        }

        CurrentEditContext = new EditContext(orgInfoExpSys);
    }

    private async Task SaveAsync()
    {
        AppDataService dMgr = new(api);
        AppState.Organization = await dMgr.UpdateOrganizationAsync(org);
        nav.NavigateTo("/");
    }
}

